<script lang="ts">
	import { enhance } from "$app/forms";
	import { page } from "$app/stores";
	import { goto } from "$app/navigation";
	import { toast } from "$lib/utils/toast";
	import BookingList from "$lib/components/BookingList.svelte";
	import CalendarNavigation from "$lib/components/CalendarNavigation.svelte";
	import BookingSearchFilters from "$lib/components/BookingSearchFilters.svelte";
	import CalendarGrid from "$lib/components/CalendarGrid.svelte";
	import { format, parseISO } from "date-fns";

	let { data, form } = $props();

	// View state
	let currentView = $state("month");
	let currentDate = $state(new Date());
	let selectedBooking = $state(null);
	let showNoteModal = $state(false);
	let noteText = $state("");

	// Modal states
	let showCancelModal = $state(false);
	let showRejectModal = $state(false);
	let showAddBookingModal = $state(false);
	let loading = $state(false);

	// Search and filters
	let searchQuery = $state(data.searchQuery || "");
	let statusFilter = $state(data.statusFilter || "all");

	// Add booking form data
	let addBookingForm = $state({
		meetingTypeId: "",
		guestName: "",
		guestEmail: "",
		guestPhone: "",
		guestNotes: "",
		hostNotes: "",
		date: "",
		time: "",
		status: "confirmed",
	});

	// Current day's bookings for day view
	let currentDayBookings = $derived(() => {
		const dayKey = format(currentDate, "yyyy-MM-dd");
		return data.bookings.filter((booking) => {
			const date =
				booking.startTime instanceof Date ? booking.startTime : parseISO(booking.startTime);
			const dateKey = format(date, "yyyy-MM-dd");
			return dateKey === dayKey;
		});
	});

	// Utility functions
	function formatDuration(minutes) {
		if (minutes < 60) return `${minutes}m`;
		const hours = Math.floor(minutes / 60);
		const mins = minutes % 60;
		return mins > 0 ? `${hours}h ${mins}m` : `${hours}h`;
	}

	function goToToday() {
		currentDate = new Date();
	}

	// Modal functions
	function showCancelConfirmation(booking) {
		selectedBooking = booking;
		showCancelModal = true;
	}

	function showRejectConfirmation(booking) {
		selectedBooking = booking;
		showRejectModal = true;
	}

	function closeCancelModal() {
		showCancelModal = false;
		selectedBooking = null;
	}

	function closeRejectModal() {
		showRejectModal = false;
		selectedBooking = null;
	}

	function openNoteModal(booking) {
		selectedBooking = booking;
		noteText = booking.hostNotes || "";
		showNoteModal = true;
	}

	function closeNoteModal() {
		showNoteModal = false;
		selectedBooking = null;
		noteText = "";
	}

	function openAddBookingModal() {
		showAddBookingModal = true;
		resetAddBookingForm();
	}

	function closeAddBookingModal() {
		showAddBookingModal = false;
		resetAddBookingForm();
	}

	function resetAddBookingForm() {
		addBookingForm = {
			meetingTypeId: "",
			guestName: "",
			guestEmail: "",
			guestPhone: "",
			guestNotes: "",
			hostNotes: "",
			date: "",
			time: "",
			status: "confirmed",
		};
	}

	function changePage(pageNum) {
		const url = new URL(window.location.href);
		url.searchParams.set("page", pageNum.toString());
		goto(url.toString());
	}

	// Form handlers
	const handleEnhance = () => {
		loading = true;
		return async ({ result, update }) => {
			if (result.type === "success") {
				toast.success(result.data?.message || "Action completed successfully!");

				// Close modals based on the action
				if (showAddBookingModal) {
					closeAddBookingModal();
					resetAddBookingForm();
				}
				if (showNoteModal) {
					closeNoteModal();
				}
				if (showCancelModal) {
					closeCancelModal();
				}
				if (showRejectModal) {
					closeRejectModal();
				}
			} else if (result.type === "failure") {
				toast.error(result.data?.error || "Failed to complete action");
			}
			await update();
			loading = false;
		};
	};

	// Handle form results
	$effect(() => {
		if (form?.success) {
			toast.success(form.message || "Action completed successfully!");
		} else if (form?.error) {
			toast.error(form.error);
		}
	});
</script>

<!-- Ultra-Compact Single-Row Layout -->
<div class="h-full flex flex-col">
	<!-- All-in-One Header Row -->
	<div class="flex items-center justify-between gap-4 p-4 border-b border-gray-200 bg-white">
		<!-- Left: Search -->
		<div class="flex-1 max-w-md">
			<BookingSearchFilters bind:searchQuery bind:statusFilter />
		</div>
		
		<!-- Center: Calendar Navigation (only for calendar views) -->
		{#if currentView !== "list"}
			<div class="flex items-center gap-3">
				<button
					onclick={() => {
						if (currentView === "month") {
							currentDate = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);
						} else if (currentView === "week") {
							currentDate = new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000);
						} else if (currentView === "day") {
							currentDate = new Date(currentDate.getTime() - 24 * 60 * 60 * 1000);
						}
					}}
					class="p-1 text-gray-400 hover:text-gray-600"
				>
					<svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
					</svg>
				</button>
				
				<div class="text-sm font-medium text-gray-900 min-w-0">
					{#if currentView === "month"}
						{format(currentDate, "MMMM yyyy")}
					{:else if currentView === "day"}
						{format(currentDate, "MMM d, yyyy")}
					{:else}
						{format(currentDate, "MMM d, yyyy")}
					{/if}
				</div>
				
				<button
					onclick={() => {
						if (currentView === "month") {
							currentDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1);
						} else if (currentView === "week") {
							currentDate = new Date(currentDate.getTime() + 7 * 24 * 60 * 60 * 1000);
						} else if (currentView === "day") {
							currentDate = new Date(currentDate.getTime() + 24 * 60 * 60 * 1000);
						}
					}}
					class="p-1 text-gray-400 hover:text-gray-600"
				>
					<svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
					</svg>
				</button>
				
				<button
					onclick={goToToday}
					class="px-2 py-1 text-xs border border-gray-300 rounded hover:bg-gray-50"
				>
					Today
				</button>
			</div>
		{/if}
		
		<!-- Right: View Toggle + Add Button -->
		<div class="flex items-center gap-3">
			<!-- View Toggle -->
			<div class="flex border border-gray-200 rounded">
				<button
					onclick={() => currentView = "month"}
					class="px-2 py-1 text-xs {currentView === 'month' ? 'bg-blue-600 text-white' : 'text-gray-600 hover:bg-gray-50'}"
				>
					Month
				</button>
				<button
					onclick={() => currentView = "week"}
					class="px-2 py-1 text-xs border-l {currentView === 'week' ? 'bg-blue-600 text-white' : 'text-gray-600 hover:bg-gray-50'}"
				>
					Week
				</button>
				<button
					onclick={() => currentView = "day"}
					class="px-2 py-1 text-xs border-l {currentView === 'day' ? 'bg-blue-600 text-white' : 'text-gray-600 hover:bg-gray-50'}"
				>
					Day
				</button>
				<button
					onclick={() => currentView = "list"}
					class="px-2 py-1 text-xs border-l {currentView === 'list' ? 'bg-blue-600 text-white' : 'text-gray-600 hover:bg-gray-50'}"
				>
					List
				</button>
			</div>
			
			<!-- Add Button -->
			<button
				onclick={openAddBookingModal}
				class="px-3 py-1.5 text-xs bg-blue-600 text-white rounded hover:bg-blue-700"
			>
				<svg class="mr-1 h-3 w-3 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
				</svg>
				Add
			</button>
		</div>
	</div>

	<!-- Connection Warning - Compact -->
	{#if !data.isCalendarConnected}
		<div class="bg-amber-50 border-b border-amber-200 px-4 py-2">
			<div class="flex items-center">
				<svg class="h-4 w-4 text-amber-500 mr-2" fill="currentColor" viewBox="0 0 20 20">
					<path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
				</svg>
				<span class="text-xs text-amber-800">
					Calendar not connected. <a href="/app/calendar" class="font-medium underline">Connect now</a>
				</span>
			</div>
		</div>
	{/if}

	<!-- Main Content Area -->
	<div class="flex-1 flex min-h-0">
		<!-- Pagination Sidebar (only for list view) -->
		{#if currentView === "list" && data.totalPages > 1}
			<div class="w-40 border-r border-gray-200 bg-gray-50 p-3">
				<div class="text-xs text-gray-600 mb-2">
					{data.bookings.length} of {data.totalBookings}
				</div>
				<div class="flex items-center gap-1">
					<button
						onclick={() => changePage(data.currentPage - 1)}
						disabled={data.currentPage <= 1}
						class="px-2 py-1 text-xs border rounded disabled:opacity-50 bg-white"
					>
						←
					</button>
					<span class="text-xs px-1">{data.currentPage}/{data.totalPages}</span>
					<button
						onclick={() => changePage(data.currentPage + 1)}
						disabled={data.currentPage >= data.totalPages}
						class="px-2 py-1 text-xs border rounded disabled:opacity-50 bg-white"
					>
						→
					</button>
				</div>
			</div>
		{/if}

		<!-- Main Content -->
		<div class="flex-1 overflow-hidden">
			{#if currentView === "month" || currentView === "week"}
				<CalendarGrid
					{currentDate}
					{currentView}
					bookings={data.bookings}
					{loading}
					onOpenNoteModal={openNoteModal}
					onShowRejectConfirmation={showRejectConfirmation}
					onShowCancelConfirmation={showCancelConfirmation}
					{handleEnhance}
				/>
			{:else if currentView === "day"}
				<div class="h-full overflow-auto p-4">
					<div class="mb-3">
						<h3 class="text-sm font-medium text-gray-900">
							{format(currentDate, 'EEEE, MMMM d, yyyy')}
						</h3>
						<p class="text-xs text-gray-600">
							{currentDayBookings().length} {currentDayBookings().length === 1 ? 'meeting' : 'meetings'}
						</p>
					</div>
					<BookingList
						bookings={currentDayBookings()}
						{loading}
						onOpenNoteModal={openNoteModal}
						onShowRejectConfirmation={showRejectConfirmation}
						onShowCancelConfirmation={showCancelConfirmation}
						emptyMessage="No meetings scheduled"
					/>
				</div>
			{:else if currentView === "list"}
				<div class="h-full overflow-auto p-4">
					<BookingList
						bookings={data.bookings}
						{loading}
						onOpenNoteModal={openNoteModal}
						onShowRejectConfirmation={showRejectConfirmation}
						onShowCancelConfirmation={showCancelConfirmation}
						emptyMessage={searchQuery || statusFilter !== "all" ? "No bookings found" : "No bookings yet"}
					/>
				</div>
			{/if}
		</div>
	</div>
</div>

<!-- Note Modal -->
{#if showNoteModal && selectedBooking}
	<div class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
		<div class="mx-4 w-full max-w-md rounded-lg bg-white p-6 shadow-xl">
			<h3 class="mb-4 text-lg font-medium text-gray-900">
				{selectedBooking.hostNotes ? "Edit Note" : "Add Note"}
			</h3>
			<form method="POST" action="?/addNote" use:enhance={handleEnhance}>
				<input type="hidden" name="bookingId" value={selectedBooking.id} />
				<div class="mb-4">
					<label for="note" class="mb-2 block text-sm font-medium text-gray-700">
						Private note about this booking
					</label>
					<textarea
						id="note"
						name="note"
						rows="4"
						bind:value={noteText}
						placeholder="Add your private notes about this booking..."
						class="w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
					></textarea>
				</div>
				<div class="flex items-center justify-end space-x-3">
					<button
						type="button"
						onclick={closeNoteModal}
						disabled={loading}
						class="px-4 py-2 text-gray-700 hover:text-gray-900 disabled:opacity-50"
					>
						Cancel
					</button>
					<button
						type="submit"
						disabled={loading || !noteText.trim()}
						class="rounded-md bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 disabled:opacity-50"
					>
						{loading ? "Saving..." : "Save Note"}
					</button>
				</div>
			</form>
		</div>
	</div>
{/if}

<!-- Cancel Confirmation Modal -->
{#if showCancelModal && selectedBooking}
	<div class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
		<div class="mx-4 w-full max-w-md rounded-lg bg-white p-6 shadow-xl">
			<h3 class="mb-2 text-lg font-medium text-gray-900">Cancel Booking</h3>
			<p class="mb-4 text-sm text-gray-600">
				Are you sure you want to cancel the booking with {selectedBooking.guestName} for "{selectedBooking
					.meetingType.name}"? This action cannot be undone.
			</p>
			<div class="flex items-center justify-end space-x-3">
				<button
					type="button"
					onclick={closeCancelModal}
					disabled={loading}
					class="px-4 py-2 text-gray-700 hover:text-gray-900 disabled:opacity-50"
				>
					Cancel
				</button>
				<form method="POST" action="?/cancel" use:enhance={handleEnhance} class="inline">
					<input type="hidden" name="bookingId" value={selectedBooking.id} />
					<input type="hidden" name="reason" value="Cancelled by host" />
					<button
						type="submit"
						disabled={loading}
						class="rounded-md bg-red-600 px-4 py-2 text-white hover:bg-red-700 disabled:opacity-50"
					>
						{loading ? "Cancelling..." : "Cancel Booking"}
					</button>
				</form>
			</div>
		</div>
	</div>
{/if}

<!-- Reject Confirmation Modal -->
{#if showRejectModal && selectedBooking}
	<div class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
		<div class="mx-4 w-full max-w-md rounded-lg bg-white p-6 shadow-xl">
			<h3 class="mb-2 text-lg font-medium text-gray-900">Reject Booking</h3>
			<p class="mb-4 text-sm text-gray-600">
				Are you sure you want to reject the booking request from {selectedBooking.guestName} for "{selectedBooking
					.meetingType.name}"?
			</p>
			<form method="POST" action="?/reject" use:enhance={handleEnhance}>
				<input type="hidden" name="bookingId" value={selectedBooking.id} />
				<div class="mb-4">
					<label for="rejectReason" class="mb-2 block text-sm font-medium text-gray-700">
						Reason for rejection (optional)
					</label>
					<textarea
						id="rejectReason"
						name="reason"
						rows="3"
						placeholder="Provide a reason for rejecting this booking..."
						class="w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
					></textarea>
				</div>
				<div class="flex items-center justify-end space-x-3">
					<button
						type="button"
						onclick={closeRejectModal}
						disabled={loading}
						class="px-4 py-2 text-gray-700 hover:text-gray-900 disabled:opacity-50"
					>
						Cancel
					</button>
					<button
						type="submit"
						disabled={loading}
						class="rounded-md bg-red-600 px-4 py-2 text-white hover:bg-red-700 disabled:opacity-50"
					>
						{loading ? "Rejecting..." : "Reject Booking"}
					</button>
				</div>
			</form>
		</div>
	</div>
{/if}

<!-- Add Booking Modal -->
{#if showAddBookingModal}
	<div class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
		<div class="mx-4 w-full max-w-lg rounded-lg bg-white p-6 shadow-xl">
			<h3 class="mb-4 text-lg font-medium text-gray-900">Add Booking Manually</h3>
			<form method="POST" action="?/addBooking" use:enhance={handleEnhance}>
				<div class="mb-4">
					<label for="meetingTypeId" class="mb-2 block text-sm font-medium text-gray-700">
						Meeting Type *
					</label>
					<select
						id="meetingTypeId"
						name="meetingTypeId"
						bind:value={addBookingForm.meetingTypeId}
						required
						class="w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
					>
						<option value="">Select a meeting type</option>
						{#each data.meetingTypes as meetingType}
							<option value={meetingType.id}
								>{meetingType.name} ({formatDuration(meetingType.duration)})</option
							>
						{/each}
					</select>
				</div>

				<div class="grid grid-cols-1 gap-4 md:grid-cols-2">
					<div>
						<label for="guestName" class="mb-2 block text-sm font-medium text-gray-700">
							Guest Name *
						</label>
						<input
							id="guestName"
							name="guestName"
							type="text"
							bind:value={addBookingForm.guestName}
							placeholder="Enter guest name"
							required
							class="w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
						/>
					</div>
					<div>
						<label for="guestEmail" class="mb-2 block text-sm font-medium text-gray-700">
							Guest Email *
						</label>
						<input
							id="guestEmail"
							name="guestEmail"
							type="email"
							bind:value={addBookingForm.guestEmail}
							placeholder="Enter guest email"
							required
							class="w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
						/>
					</div>
				</div>

				<div class="mb-4">
					<label for="guestPhone" class="mb-2 block text-sm font-medium text-gray-700">
						Guest Phone
					</label>
					<input
						id="guestPhone"
						name="guestPhone"
						type="tel"
						bind:value={addBookingForm.guestPhone}
						placeholder="Enter guest phone (optional)"
						class="w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
					/>
				</div>

				<div class="grid grid-cols-2 gap-4">
					<div>
						<label for="date" class="mb-1 block text-sm font-medium text-gray-700"> Date * </label>
						<input
							id="date"
							name="date"
							type="date"
							required
							bind:value={addBookingForm.date}
							min={new Date().toISOString().split("T")[0]}
							class="w-full rounded-md border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
						/>
					</div>

					<div>
						<label for="time" class="mb-1 block text-sm font-medium text-gray-700"> Time * </label>
						<input
							id="time"
							name="time"
							type="time"
							required
							bind:value={addBookingForm.time}
							class="w-full rounded-md border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
						/>
					</div>
				</div>

				<div class="mb-4">
					<label for="status" class="mb-2 block text-sm font-medium text-gray-700"> Status </label>
					<select
						id="status"
						name="status"
						bind:value={addBookingForm.status}
						class="w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
					>
						<option value="confirmed">Confirmed</option>
						<option value="pending">Pending</option>
						<option value="cancelled">Cancelled</option>
						<option value="rejected">Rejected</option>
						<option value="completed">Completed</option>
					</select>
				</div>

				<div class="mb-4">
					<label for="guestNotes" class="mb-2 block text-sm font-medium text-gray-700">
						Guest Notes
					</label>
					<textarea
						id="guestNotes"
						name="guestNotes"
						rows="2"
						bind:value={addBookingForm.guestNotes}
						placeholder="Any notes from the guest..."
						class="w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
					></textarea>
				</div>

				<div class="mb-4">
					<label for="hostNotes" class="mb-2 block text-sm font-medium text-gray-700">
						Host Notes
					</label>
					<textarea
						id="hostNotes"
						name="hostNotes"
						rows="2"
						bind:value={addBookingForm.hostNotes}
						placeholder="Your private notes about this booking..."
						class="w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
					></textarea>
				</div>

				<div class="flex items-center justify-end space-x-3">
					<button
						type="button"
						onclick={closeAddBookingModal}
						disabled={loading}
						class="px-4 py-2 text-gray-700 hover:text-gray-900 disabled:opacity-50"
					>
						Cancel
					</button>
					<button
						type="submit"
						disabled={loading}
						class="rounded-md bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 disabled:opacity-50"
					>
						{loading ? "Creating..." : "Create Booking"}
					</button>
				</div>
			</form>
		</div>
	</div>
{/if}
</div>
